# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.63.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Register any new devices"
  lane :devices do
    register_devices( devices_file: './fastlane/devices.txt')
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new build to Crashlytics"
  desc "This will also make sure the profile is up to date"
  lane :crashlytics do
    match(type: "adhoc", force_for_new_devices: true)
    notification(subtitle: "Changelog prompt ready", message: "Please add your notes for testers...")
    changelog = prompt(text: "Enter the change log: ",
                       multi_line_end_keyword: "END")
    gym(scheme: "Digita11y") 
    crashlytics(crashlytics_path: "./Pods/Crashlytics/iOS/Crashlytics.framework",
                    notes: changelog,
                    groups: "Digita11yTech")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "appstore", force_for_new_devices: true) 
    gym(scheme: "Digita11y") 
    pilot
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    match(type: "appstore")
    # snapshot
    gym(scheme: "Digita11y") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
